.\" Copyright 2014 Garrett D'Amore <garrett@damore.org>
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.Dd Sep 19, 2014
.Dt STANDARDS 5
.Os
.Sh NAME
.Nm standards ,
.Nm ANSI ,
.Nm C ,
.Nm C++ ,
.Nm ISO ,
.Nm POSIX ,
.Nm POSIX.1 ,
.Nm SUS ,
.Nm SUSv2 ,
.Nm SUSv3 ,
.Nm SUSv4 ,
.Nm XNS ,
.Nm XNS5 ,
.Nm XPG ,
.Nm XPG4v2
.Nd supported standards and specifications
.Sh DESCRIPTION
This system supports the
Single UNIX Specification as well as
.St -p1003.1 .
Note that this system is derived from Solaris, and SunOS, and so inherits
much of the conformance of those systems.
.
.Lp
The system has not been independently tested nor certified
for conformance with with any standard, nor has it been branded with any
UNIX standard.
.
.Ss "Supported Standards/Specifications"
The system supports the following standards and specifications.
.Lp
.Bl -bullet -compact -offset Ds
.
.It
.St -p1003.1-2001
.
.It
.St -p1003.1-2008 (partial)
.
.It
.St -xpg4.2
.
.It
.St -susv2
.
.It
.St -susv3
.
.It
Version 4 of the Single UNIX Specification
.Pq Dq SUSv4
.Pq partial
.El
.Lp
Note that support for both SUSv4 and POSIX.1-2008 is a work in progress.
Applications may make use of features from them, but should not expect
to find all required features present.
.
.Ss "Discontinued Specifications"
.
Support for the following legacy specifications, formerly supported
by Solaris, has been discontinued in favor of newer standards.
.Lp
.Bl -bullet -compact -offset Ds
.It
System V Interface Definition, Third Edition
.Pq Dq SVID3
.It
.St -xpg3
.It
.St -xpg4
.It
.St -p1003.1-88
.It
.St -p1003.1-90
.It
.St -p1003.2-92
.It
.St -p1003.1b-93
.It
.St -p1003.1c-95
.El
.
.Ss "Solaris Compatibility"
.
The system retains binary compatibility with Solaris on a best-effort
basis, and
applications developed for Solaris should function properly on this system,
except where such applications depend on legacy utility behaviors.
See the
.Sx Utilities
section for more information.
.
.Lp
Source compatibility with Solaris is provided on a best-effort basis as well.
Applications wishing to access legacy Solaris interfaces that conflict
with formal standards should define the macro
.Dv _SUNOS_SOURCE .
.
.Ss "Compilation Systems"
.
The system also includes header files to support C compilers conforming
to
.St -ansiC-89 ,
.St -isoC-90 ,
.St -isoC-amd1 ,
and
.St -isoC-99 .
However, full support for those standards depends on the compiler.
.Lp
The system headers also support ISO/IEC 14822:1998 Programming Langues - C++,
but again this is dependent upon a suitable C++ compiler being installed.
.Ss "Utilities"
This system provides standard conforming versions of utilities by default.
When conflicts in the standards exist which
require incompatible behaviors, this system implements the behavior
required by the more recent standard.
No provision is made for legacy behaviors, except where such behaviors
are not in conflict with the relevant standard(s).
Users requiring compatibility with legacy behaviors should consider
use of branded zones.
See
.Xr brands 5 .
.
The following directories should appear in the user's
.Ev PATH
environment variable in the order listed, to obtain conforming behavior.
.
.Lp
.Bl -enum -compact -offset Ds
.It
.Pa /usr/xpg6/bin
.It
.Pa /usr/xpg4/bin
.It
.Pa /usr/bin
.It
directory containing binaries for your compiler
.It
other directories containing binaries needed by the application
.El
.Ss "Feature Test Macros"
Feature test macros are used by applications to indicate additional sets of
features that are desired beyond those specified by the C standard.
If an
application uses only those interfaces and headers defined by a particular
standard (such as POSIX or X/Open CAE), then it need only define the
appropriate feature test macro specified by that standard.
If the application
is using interfaces and headers not defined by that standard, then in addition
to defining the appropriate standard feature test macro, it must also define
.Dv __EXTENSIONS__ .
Defining
.Dv __EXTENSIONS__
provides the application with access to all interfaces and headers not in
conflict with the specified standard.
The application must define
.Dv __EXTENSIONS__
either on the
compile command line or within the application source files.
.Ss "1989 ANSI C, 1990 ISO C, 1999 ISO C"
No feature test macros need to be defined to indicate that an application is a
conforming C application.
.Ss "ANSI/ISO C++"
ANSI/ISO C++ does not define any feature test macros. If the standard C++
announcement macro
.Dv __cplusplus
is predefined to value 199711 or greater,
the compiler operates in a standard-conforming mode, indicating C++ standards
conformance.
The value 199711 indicates conformance to ISO/IEC 14882:1998, as
required by that standard.
.Lp
C++ bindings are not defined for POSIX or X/Open CAE, so specifying feature
test macros such as
.Dv _POSIX_SOURCE , _POSIX_C_SOURCE ,
and
.Dv _XOPEN_SOURCE
can result in compilation errors due to conflicting
requirements of standard C++ and those specifications.
.Ss "POSIX"
Applications that are intended to be conforming POSIX.1 applications must
define the feature test macros specified by the standard before including any
headers.
For the standards listed below, applications must define the feature
test macros listed.
Application writers must check the corresponding standards
for other macros that can be queried to determine if desired options are
supported by the implementation.
.\".Lp
.\"Note that POSIX standards prior to POSIX.1-2001 are supported on a
.\"best-effort basis only.
.
.Bl -column -offset Ds "POSIX Standard" "Feature Test Macros"
.It Em "POSIX Standard"
.Ta Em "Feature Test Macros"
.\".It POSIX.1-1990
.\".Ta Dv _POSIX_SOURCE
.\".It POSIX.2-1992
.\".Ta Dv _POSIX_SOURCE No and Dv _POSIX_C_SOURCE Ns Li =2
.\".It POSIX.1b-1993
.\".Ta Dv _POSIX_C_SOURCE Ns =199309L
.\".It POSIX.1c-1996
.\".Ta Dv _POSIX_C_SOURCE Ns Li =199506L
.It POSIX.1-2001
.Ta Dv _POSIX_C_SOURCE Ns Li =200112L
.It POSIX.1-2008
.Ta Dv _POSIX_C_SOURCE Ns Li =200809L
.El
.
.Ss "X/Open CAE"
To build or compile an application that conforms to one of the X/Open CAE
specifications, use the following guidelines. Applications need not set the
POSIX feature test macros if they require both CAE and POSIX functionality.
.Bl -column -offset Ds "Specification" "Feature Test Macros"
.It Em "Specification"
.Ta Em "Feature Test Macros"
.
.\".It XPG3
.\".Ta Dv _XOPEN_SOURCE
.
.\".It XPG4
.\".Ta Dv _XOPEN_SOURCE No and Dv _XOPEN_VERSION Ns Li =4
.
.It SUS (XPG4v2)
.Ta Dv _XOPEN_SOURCE No and Dv _XOPEN_SOURCE_EXTENDED Ns Li =1
.
.It SUSv2
.Ta Dv _XOPEN_SOURCE Ns Li =500
.
.It SUSv3
.Ta Dv _XOPEN_SOURCE Ns Li =600
.
.It SUSv4
.Ta Dv _XOPEN_SOURCE Ns Li =700
.El
.
.Ss "Compilation"
A  SUS-, or SUSv2-conforming implementation must include an
.St -ansiC-89
standard-conforming compilation system and the
.Ic cc
and
.Ic c89
utilities.
A POSIX.1 (2001-2008)-, SUSv3-, or SUSv4-conforming implementation must
include an
.St -isoC-99
standard-conforming
compilation system and the
.Ic c99
utility.
.Lp
When
.Ic cc
is used to link applications,
.Pa /usr/lib/values-xpg4.o
must be specified on any link/load command line, unless the application is
POSIX.1-2001- or SUSv3-conforming, in which case
.Pa /usr/lib/values-xpg6.o
must be specified on any link/load compile line.
The preferred way to build
applications, however, is described in the table below.
.Lp
An XNS5-conforming application must include
.Fl l Ar xnet
on any link/load command line in addition to defining the feature test macros
specified for SUS or SUSv2, respectively.
.Lp
If the compiler suppports the
.Sy redefine_extname
pragma feature,
then the standard headers use
.Sy "#pragma redefine_extname"
directives
to properly map function names onto library entry point names.
This mapping
provides full support for ISO C, POSIX, and X/Open namespace reservations.
.Lp
If this pragma feature is not supported by the compiler, the headers use the
.Sy "#define"
directive to map internal function names onto appropriate library
entry point names. In this instance, applications should avoid using the
explicit 64-bit file offset symbols listed on the
.Xr lf64 5
manual page, since these names are used by the implementation to name the
alternative entry points.
.Lp
When using \fBSun Studio\fR compilers, applications conforming
to the specifications listed above should be compiled using the utilities and
flags indicated in the following table:
.Bl -column -offset Ds "Specification" "Compiler" "Feature Test Macros"
.It Em Specification
.Ta Em "Compiler"
.Ta Em "Feature Test Macros"
.
.It 1989 ANSI C
.Ta Ic c89
.Ta none
.
.It 1990 ISO C
.Ta Ic c89
.Ta none
.
.It 1999 ISO C
.Ta Ic c99
.Ta none
.
.\".It SVID3
.\".Ta Ic cc Fl Xt Fl xc99=none
.\".Ta none
.\".
.\".It POSIX.1-1990
.\".Ta Ic c89
.\".Ta Dv _POSIX_SOURCE
.\".
.\".It POSIX.2-1992
.\".Ta Ic c89
.\".Ta Dv _POSIX_SOURCE No and Dv POSIX_C_SOURCE Ns Li =2
.\".
.\".It POSIX.1b-1993
.\".Ta Ic c89
.\".Ta Dv _POSIX_C_SOURCE Ns Li =199309L
.\".
.\".It POSIX.1c-1996
.\".Ta Ic c89
.\".Ta Dv _POSIX_C_SOURCE Ns Li =199506L
.
.It POSIX.1-2001
.Ta Ic c99
.Ta Dv _POSIX_C_SOURCE Ns Li =200112L
.
.It POSIX.1-2008
.Ta Ic c99
.Ta Dv _POSIX_C_SOURCE Ns Li =200809L
.
.It SUS (XPG4v2)
.Ta Ic c89
.Ta Dv _XOPEN_SOURCE No and Dv _XOPEN_SOURCE_EXTENDED Ns Li =1
.
.It SUSv2
.Ta Ic c89
.Ta Dv _XOPEN_SOURCE Ns Li =500
.
.It SUSv3
.Ta Ic c99
.Ta Dv _XOPEN_SOURCE Ns Li =600
.
.It SUSv4
.Ta Ic c99
.Ta Dv _XOPEN_SOURCE Ns Li =700
.
.El
.Lp
For platforms supporting the LP64 (64-bit) programming environment,
SUSv2-conforming LP64 applications using XNS5 library calls should be built
with command lines of the form:
.Bd -literal -offset Ds
c89 $(getconf XBS5_LP64_OFF64_CFLAGS) -D_XOPEN_SOURCE=500 \e
    $(getconf XBS5_LP64_OFF64_LDFLAGS) foo.c -o foo \e
    $(getconf XBS5_LP64_OFF64_LIBS) -lxnet
.Ed
.Lp
Similar SUSv3-conforming LP64 applications should be built with command lines
of the form:
.Bd -literal -offset Ds
c99 $(getconf POSIX_V6_LP64_OFF64_CFLAGS) -D_XOPEN_SOURCE=600 \e
    $(getconf POSIX_V6_LP64_OFF64_LDFLAGS) foo.c -o foo \e
    $(getconf POSIX_V6_LP64_OFF64_LIBS) -lxnet
.Ed
.Lp
and SUSv4-conforming LP64 applications should be built with command lines
of the form:
.Bd -literal -offset Ds
c99 $(getconf POSIX_V7_LP64_OFF64_CFLAGS) -D_XOPEN_SOURCE=700 \e
    $(getconf POSIX_V7_LP64_OFF64_LDFLAGS) foo.c -o foo \e
    $(getconf POSIX_V7_LP64_OFF64_LIBS) -lxnet
.Ed
.
.Sh SEE ALSO
.
.Xr ksh 1 ,
.Xr sh 1 ,
.Xr exec 2 ,
.Xr sysconf 3C ,
.Xr system 3C ,
.Xr environ 5 ,
.Xr lf64 5

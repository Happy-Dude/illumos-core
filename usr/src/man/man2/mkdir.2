.\" Copyright 2014 Garrett D'Amore <garrett@damore.org>
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.
.\"  This notice shall appear on any product containing this material.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.Dd Aug 25, 2014
.Dt MKDIR 2
.Os
.
.Sh NAME
.
.Nm mkdir ,
.Nm mkdirat
.Nd make a directory
.Sh SYNOPSIS
.In sys/stat.h
.Ft int
.Fn mkdir "const char *path" "mode_t mode"
.
.Ft int
.Fn mkdirat "int fd" "const char *path" "mode_t mode"
.
.Sh DESCRIPTION
.
The
.Fn mkdir
function creates a new directory named by the path name pointed to by
.Fa path .
The mode of the new directory is  initialized from
.Fa mode
(see
.Xr chmod 2
for values of mode). The protection part of the
.Fa mode
argument
is modified by the process's file creation mask
.Pq see Xr umask 2 .
.Lp
The directory's owner ID is set to  the process's effective user ID. The
directory's group ID is set to the  process's effective group ID, or if
the
.Dv S_ISGID
bit is set in the parent directory, then the group ID
of the directory is inherited from the parent.  The
.Dv S_ISGID
bit of the new directory is  inherited from the parent directory.
.Lp
If
.Fa path
names a symbolic link,
.Fn mkdir
fails and sets errno to
.Er EEXIST .
.Lp
The newly created directory is empty with the exception of entries for itself
.Pq Sq \&.
and its parent directory
.Pq Sq \&.. .
.Lp
Upon successful completion,
.Fn mkdir
marks for update the
.Vt st_atime ,
.Vt st_ctime
and
.Vt st_mtime
fields of the directory. Also, the
.Vt st_ctime
and
.Vt st_mtime
fields of the directory that contains the new entry are marked for update.
.
.Lp
The
.Fn mkdirat
function performs the same action as
.Fn mkdir ,
except that if
.Fa path
is relative, then it is relative to the
.Fa fd
argument, which must be either a file descriptor representing a directory
.Pq such as from Xr dirfd 3C ,
or the special value
.Dv AT_FDCWD .
.Lp
If
.Fa fd
is the special value
.Dv AT_FDWCD
and the
.Fa path
is relative, then the process' current working directory is used as the base
for the relative
.Fa path .
In this case, the
.Fn mkdirat
function is identical to
.Fn mkdir .
.Lp
If
.Fa path
is relative, and
.Fa fd
is not
.Dv AT_FDCWD
and was opened without
.Dv O_SEARCH ,
then the directory permissions are checked to ensure that searches in
the directory are permitted.
.
.Sh RETURN VALUES
.
Upon successful completion, 0 is returned. Otherwise, \(mi1 is
returned, no directory is created, and
.Va errno
is set to indicate the error.
.
.Sh EXAMPLES
.
.Ss Example 1 Create a directory.
The following example demonstrates how to create a directory named
.Pa /home/cnd/mod1 ,
with read, write, and search permissions for owner and
group, and with read and search permissions for others.
.Bd -literal -offset indent
#include <sys/types.h>
#include <sys/stat.h>
int status;
\&...
status = mkdir("/home/cnd/mod1",
     S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);
.Ed
.
.Sh ERRORS
.
The
.Fn mkdir
and
.Fn mkdirat
functions will fail if:
.Bl -tag -width Er
.
.It Bq Er EACCES
Either a component of the path prefix denies search permission or write
permission is denied on the parent directory of the directory to be created.
.
.It Bq Er EDQUOT
The directory where the new file entry is being placed cannot be extended
because the user's quota of disk blocks on that file system has been exhausted;
the new directory cannot be created because the user's quota of disk blocks on
that file system has been exhausted; or the user's quota of inodes on the file
system where the file is being created has been exhausted.
.
.It Bq Er EEXIST
The named file already exists.
.
.It Bq Er EFAULT
The
.Fa path
argument points to an illegal address.
.
.It Bq Er EINVAL
An attempt was made to create an extended attribute that is a directory.
.
.It Bq Er EIO
An I/O error has occurred while accessing the file system.
.
.It Bq Er EILSEQ
The path argument includes non-UTF8 characters and the file system accepts only
file names where all characters are part of the UTF-8 character codeset.
.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating
.Fa path ,
or a loop exists in symbolic links encountered during resolution of
.Fa path .
.
.It Bq Er EMLINK
The maximum number of links to the parent directory would be exceeded.
.
.It Bq Er ENAMETOOLONG
The length of the
.Fa path
argument exceeds
.Brq Dv PATH_MAX ,
or the length of
a
.Fa path
component exceeds
.Brq Dv NAME_MAX
while
.Dv _POSIX_NO_TRUNC
is in effect.
.
.It Bq Er ENOENT
A component of the path prefix does not exist or is a null pathname.
.
.It Bq Er ENOLINK
The
.Fa path
argument points to a remote machine and the link to that machine
is no longer active.
.
.It Bq Er ENOSPC
No free space is available on the device containing the directory.
.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.
.It Bq Er EROFS
The path prefix resides on a read-only file system.
.
.El
.Lp
The
.Fn mkdirat
function will fail if:
.Bl -tag -width Er
.
.It Bq Er EBADF
The
.Fa path
argument is not absolute, and the
.Fa fd
argument is neither an open file descriptor, nor the special value
.Dv AT_FDCWD .
.
.It Bq Er ENOTDIR
The path
argument is not absolute, and the object underlying the
.Fa fd
argument is not a directory.
.El
.Lp
The
.Fn mkdir
and
.Fn mkdirat
functions may fail if:
.Bl -tag -width Er
.
.It Bq Er ENAMETOOLONG
As a result of encountering a symbolic link in resolution of the
.Fa path
argument, the length of the substituted pathname string exceeded
.Brq Dv PATH_MAX .
.
.It Bq Er ELOOP
More than
.Brq Dv SYMLOOP_MAX symbolic links were traversed while resolving
.Fa path .
.
.El
.
.Sh INTERFACE STABILITY
.
.Sy Standard .
.
.Sh MT-LEVEL
.
.Sy Async-Signal-Safe .
.
.Sh SEE ALSO
.
.Xr chmod 2 ,
.Xr mknod 2 ,
.Xr umask 2 ,
.Xr dirfd 3C ,
.Xr mkdirp 3GEN ,
.Xr stat.h 3HEAD ,
.Xr standards 5
.
.Sh STANDARDS
.
These functions are available in the following compilation environments.  See
.Xr standards 5 .
.
.Ss Fn mkdir
.
.Bl -bullet -compact
.It
.St -p1003.1-90
.It
.St -xpg3
.It
.St -xpg4
.It
.St -xpg4.2
.It
.St -susv2
.It
.St -susv3
.It
.St -p1003.1-2008
.El
.
.Ss Fn mkdirat
.
.Bl -bullet -compact
.It
.St -p1003.1-2008
.El

.\" Copyright 2014 Garrett D'Amore <garrett@damore.org>
.\" Copyright (c) 2013 Gary Mills
.\" Copyright (c) 2004 Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.
.\"  This notice shall appear on any product containing this material.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.Dd Sep 25, 2014
.Dt GETLOGIN 3C
.Os
.
.Sh NAME
.
.Nm getlogin ,
.Nm getlogin_r
.Nd get login name
.
.Sh SYNOPSIS
.
.In unistd.h
.
.Ft "char *"
.Fn getlogin void
.
.Ft int
.Fo getlogin_r
.Fa "char *name"
.Fa "size_t namesize"
.Fc
.
.Sh DESCRIPTION
.
The
.Fn getlogin
function returns a pointer to the login name as found in
.Pa /var/adm/utmpx .
It can be used in conjunction with
.Xr getpwnam 3C
to locate the correct password file entry when the same user ID is shared by
several login names.
.Lp
The login name plus the terminating null byte can be up to 33 characters
in length.
Newly-compiled programs should use the
.Dv LOGIN_NAME_MAX
symbol, defined in
.In limits.h ,
to size the buffer.
Older programs that call
.Fn getlogin
expect only the legacy 9-character length.
These automatically link to a version of the
.Fn getlogin
functions that truncates longer login names.
It's also possible to compile new programs that link to truncating versions
of these functions by defining the macro
.Dv __USE_LEGACY_LOGNAME__
before including
.In unistd.h .
.Lp
Some older programs will correctly handle long login names returned
by the
.Fn getlogin
function.
For this case, the user compatibility library
.Pa /usr/lib/getloginx.so.1
redirects to a version of the
.Fn getlogin
function that returns the long name.
This library should be added to such an application at runtime using
.Dv LD_PRELOAD .
.Lp
If
.Fn getlogin
is called within a process that is not attached to a terminal,
it returns a null pointer.
The correct procedure for determining the login name is to call
.Xr cuserid 3C ,
or to call
.Fn getlogin
and if it fails to call
.Xr getpwuid 3C .
.Lp
The
.Fn getlogin_r
function has the same functionality as
.Fn getlogin
except that the caller must supply a buffer
.Fa name
with length
.Fa namesize
to store the result.
The
.Fa name
buffer should be at least
.Dv LOGIN_NAME_MAX
bytes in size
.Pq defined in In limits.h .
If the size of the supplied buffer is less than
.Dv LOGIN_NAME_MAX
and the name, including the null
terminator, does not fit inside the buffer, than an error will be generated.
Otherwise, the buffer
.Fa name
will be updated with the login name.
.
.Sh RETURN VALUES
.
Upon successful completion,
.Fn getlogin
returns a pointer to the login
name or a null pointer if the user's login name cannot be found.
 Otherwise it returns a null pointer and sets
.Va errno
to indicate the error.
.Lp
The
.Fn getlogin_r
returns 0 if successful, or the error number upon failure.
.
.Sh FILES
.
.Bl -tag -width Pa
.It Pa /var/adm/utmpx
user access and administration information
.
.It Pa /usr/lib/getloginx.so.1
A compatibility library that returns long login names to older applications.
.
.It Pa /usr/lib/64/getloginx.so.1
A 64-bit compatibility library to return long login names.
.
.El
.
.Sh ERRORS
.
The
.Fn getlogin_r
function will fail if:
.Bl -tag -width Er
.It Bq Er ERANGE
The size of the buffer is smaller than the result to be returned.
.It Bq Er EINVAL
An entry for the current user was not found in the
.Pa /var/adm/utmpx
file.
.El
.Lp
The
.Fn getlogin
and
.Fn getlogin_r
functions may fail if:
.
.Bl -tag -width Er
.It Bq Er EMFILE
There are
.Brq Dv OPEN_MAX
file descriptors currently open in the calling process.
.
.It Bq Er ENFILE
The maximum allowable number of files is currently open in the system.
.
.It Bq Er ENXIO
The calling process has no controlling terminal.
.El
.Lp
The
.Fn getlogin_r
function may fail if:
.Bl -tag -width Er
.It Bq Er ERANGE
The size of the buffer is smaller than the result to be returned.
.El
.
.Sh USAGE
.
The return value of
.Fn getlogin
points to thread-specific data whose
content is overwritten on each call by the same thread.
.Lp
Three names associated with the current process can be determined:
.Fo getpwuid
.Fn  geteuid
.Fc
returns the name associated with the
effective user ID of the process;
.Fn getlogin
returns the name associated
with the current login activity; and
.Fo getpwuid
.Fn getuid
.Fc
returns the name associated with the real user ID of the process.
.
.Sh INTERFACE STABILITY
.
.Sy Standard .
.
.Sh MT-LEVEL
.
The
.Fn getlogin
function is
.Sy Safe ,
but portable applications must not depend on this.
The
.Fn getlogin_r
function is
.Sy MT-Safe .
.
.Sh SEE ALSO
.Xr geteuid 2 ,
.Xr getuid 2 ,
.Xr cuserid 3C ,
.Xr getgrnam 3C ,
.Xr getpwnam 3C ,
.Xr getpwuid 3C ,
.Xr utmpx 4 ,
.Xr standards 5
.
.Sh STANDARDS
.
These functions are available in the following compilation environments.
See
.Xr standards 5 .
.Ss Fn getlogin
.Bl -bullet -compact
.It
.St -p1003.1
.It
.St -p1003.1-2001
.It
.St -p1003.1-2008
.It
.St -xpg4.2
.It
.St -susv2
.It
.St -susv3
.El
.Ss Fn getlogin_r
.
.Bl -bullet -compact
.It
.St -p1003.1c-95
.It
.St -p1003.1-2001
.It
.St -p1003.1-2008
.It
.St -susv2
.It
.St -susv3
.El
.
.
.Sh NOTES
.
Solaris provided a
.Fn getlogin_r
as specified in
POSIX.1c Draft 6.
The final POSIX.1c standard changed the interface as described above.
Applications compiled using the Draft 6 interface in Solaris will continue
to function, but new applications must use the standard-conforming interface.

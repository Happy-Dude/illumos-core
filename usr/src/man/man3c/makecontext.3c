.\" Copyright 2014 Garrett D'Amore <garrett@damore.org>
.\" Copyright 1989 AT&T.  Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved.  Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.
.\"  This notice shall appear on any product containing this material.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.Dd "Jul 14, 2014"
.Dt MAKECONTEXT 3C
.Os
.Sh NAME
.Nm makecontext, swapcontext
.Nd manipulate user contexts
.Sh SYNOPSIS
.In ucontext.h
.Ft void
.Fn makecontext "ucontext_t *ucp" "void \*(lp*func\*(rp\*(lp\*(rp, int argc, ..."
.Ft int
.Fn swapcontext "ucontext_t *restrict oucp" "const ucontext_t *restrict ucp"
.Sh DESCRIPTION
The
.Fn makecontext
function modifies the context specified by
.Fa ucp ,
which has been initialized using
.Xr getcontext 2 .
When this context is
resumed using
.Fn swapcontext
or
.Xr setcontext 2 ,
execution continues by calling the function
.Fa func ,
passing it the arguments that follow
.Fa argc
in the
.Fn makecontext
call. The value of
.Fa argc
must match the number of pointer-sized integer arguments passed to
.Fn func ,
otherwise the behavior is undefined.
.Lp
Before a call is made to
.Fn makecontext ,
the context being modified should
have a stack allocated for it. The stack is assigned to the context by
initializing the
.Fa uc_stack
member.
.Lp
The
.Fa uc_link
member is used to determine the context that will be resumed
when the context being modified by
.Fn makecontext
returns.  The
.Fa uc_link
member should be initialized prior to the call to
.Fn makecontext .
If the
.Fa uc_link
member is initialized to
.Dv NULL ,
the thread executing
.Fa func
will exit when
.Fa func
returns. See
.Xr pthread_exit 3C .
.Lp
The
.Fn swapcontext
function saves the current context in the context
structure pointed to by
.Fa oucp
and sets the context to the context
structure pointed to by
.Fa ucp .
.Lp
If the
.Fa ucp
or
.Fa oucp
argument points to an invalid address, the
behavior is undefined and
.Va errno
may be set to
.Er EFAULT .
.Sh RETURN VALUES
.Rv -std swapcontext
.Sh EXAMPLES
.Ss Example 1
The following example illustrates execution context on a stack whose memory was
allocated using
.Xr  mmap 2 :
.Bd -literal -offset indent
#include <stdio.h>
#include <ucontext.h>
#include <sys/mman.h>

void
assign(long a, int *b)
{
        *b = (int)a;
}

int
main(int argc, char **argv)
{
        ucontext_t uc, back;
        size_t sz = 0x10000;
        int value = 0;

        getcontext(&uc);

        uc.uc_stack.ss_sp = mmap(0, sz,
            PROT_READ | PROT_WRITE | PROT_EXEC,
            MAP_PRIVATE | MAP_ANON, -1, 0);
        uc.uc_stack.ss_size = sz;
        uc.uc_stack.ss_flags = 0;

        uc.uc_link = &back;

        makecontext(&uc, assign, 2, 100L, &value);
        swapcontext(&back, &uc);

        printf("done %d\en", value);

        return (0);
}
.Ed
.Sh ERRORS
The
.Fn swapcontext
function will fail if:
.Bl -tag -width Er
.It Er ENOMEM
The
.Fa ucp
argument does not have enough stack left to complete the operation.
.El
.Lp
The
.Fn swapcontext
function may fail if:
.Bl -tag -width Er
.It Er EFAULT
The
.Fa ucp
or
.Fa oucp
argument points to an invalid address.
.El
.Sh USAGE
These functions are useful for implementing user-level context switching
between multiple threads of control within a process (co-processing). More
effective multiple threads of control can be obtained by using native support
for multithreading. See
.Xr pthreads 5 .
.Sh INTERFACE STABILITY
.Sy Obsolete Standard .
.Sh MT-LEVEL
.Sy MT-Safe .
.Sh SEE ALSO
.Xr mmap 2 ,
.Xr getcontext 2 ,
.Xr sigaction 2 ,
.Xr sigprocmask 2 ,
.Xr pthread_exit 3C ,
.Xr ucontext.h 3HEAD ,
.Xr standards 5 ,
.Xr pthreads 5
.Sh NOTES
The semantics of the
.Fa uc_stack
member of the
.Ft ucontext_t
structure have changed as they apply to inputs to
.Fn makecontex .
Prior to Solaris 10, the
.Fa ss_sp
member of the
.Fa uc_stack
structure represented the high
memory address of the area reserved for the stack. The \fBss_sp\fR member now
represents the base (low memory address), in keeping with other uses of
.Fa ss_sp .
.Lp
This change in the meaning of
.Fa ss_sp
is now the default behavior. The
.Dv -D__MAKECONTEXT_V2_SOURCE
compilation flag used in Solaris 9 update
releases to access this behavior is obsolete.
.Lp
Binary compatibility has been preserved with releases prior to Solaris 10.
Before recompiling, applications that use
.Fn makecontext
must be updated
to reflect this behavior change.
.Lp
Portable applications should not use this function. Instead, applications
should use
.Xr pthreads 5
routines.
.Lp
Note that the definition of
.Fn makecontext
violates
.St -isoC .
There is no way to declare this function that does not violate that
standard.
.Sh STANDARDS
These functions are available in the following compilation environments. See
.Xr standards 5 .
.Lp
.Bl -bullet -compact
.It
.St -xpg4.2
.It
.St -susv2
.It
.St -susv3
.El
.Lp
These functions were marked obsolete in
.St -susv3
and subsequently removed from
.St -p1003.1-2008 .

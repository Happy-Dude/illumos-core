.\" Copyright 2014 Garrett D'Amore <garrett@damore.org>
.\" Copyright 1989 AT&T
.\" Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.
.\"  This notice shall appear on any product containing this material.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.Dd Sep 6, 2014
.Dt LN 1
.Os
.
.Sh NAME
.
.Nm ln
.Nd make hard or symbolic links to files
.
.Sh SYNOPSIS
.
.Nm
.Op Fl fns
.Op Fl F | P
.Ar source_file
.Op Ar target
.
.Nm
.Op Fl fns
.Op Fl F | P
.Ar source_file Ns No ...
.Ar target
.
.Sh DESCRIPTION
.
In the first synopsis form, the
.Nm
utility creates a new directory entry
(link) for the file specified by
.Ar source_file ,
at the destination path specified by
.Ar target .
If
.Ar target
is not specified, the link is made in the current directory.
This first synopsis form is assumed when the final
operand does not name an existing directory; if more than two operands are
specified and the final is not an existing directory, an error will result.
.Lp
In the second synopsis form, the
.Nm
utility creates a new directory entry for each file specified by a
.Ar source_file
operand, at a destination path
in the existing directory named by
.Ar target .
.Lp
The
.Nm
utility may be used to create both hard links and symbolic links.
A hard link is a pointer to a file and is indistinguishable from the original
directory entry. Any changes to a file are effective independent of the name
used to reference the file. Hard links may not span file systems and may not
refer to directories.
.Lp
The
.Nm
utility by default creates hard links.
Each
.Ar source_file
is linked to
.Ar target . If
.Ar target
is a directory, another file named
.Ar source_file
is created in
.Ar target
and linked to the original
.Ar source_file .
.Lp
If
.Ar target
is an existing file and the
.Fl f
option is not specified,
.Nm
will write a diagnostic message to standard error, do nothing more
with the current
.Ar source_file ,
and go on to any remaining
.Ar source_file Ns No s.
.Lp
A symbolic link is an indirect pointer to a file; its directory entry  contains
the name of the file to which it is linked.
Symbolic links may span file systems and may refer to directories.
.Lp
File permissions for
.Ar target
may be different from those displayed with an
.Fl l
listing of the
.Xr ls 1
command.
To display the permissions of
.Ar target ,
use
.Ic ls Fl lL .
See
.Xr stat 2
for more information.
.Lp
When creating a hard link, and the source file is itself a symbolic link, the
target will be a hard link to the file referenced by the symbolic link, not to
the symbolic link object itself
.Pq Ar source_file ,
unless the
.Fl P
flag is present.
.Ss "/usr/bin/ln"
.
If
.Nm /usr/bin/ln
determines that the mode of
.Ar target
forbids writing, it prints the mode (see
.Xr chmod 1 ,
asks for a response, and reads the
standard input for one line.
If the response is affirmative, the link occurs, if permissible.
Otherwise, the command exits.
.
.Sh OPTIONS
.
The following options are supported:
.Bl -tag -width indent
.It Fl f
Links files without questioning the user, even if the mode of
.Ar target
forbids writing. This is the default if the standard input is not a terminal.
.
.It Fl s
Creates a symbolic link.
.sp
If the
.Fl s
option is used with two arguments,
.Fa target
may be an
existing directory or a non-existent file. If
.Fa target
already exists and
is not a directory, an error is returned.
.Ar source_file
may be any path
name and need not exist.
If it exists, it may be a file or directory and may
reside on a different file system from
.Ar target .
If
.Ar target
is an
existing directory, a file is created in directory
.Ar target
whose name is
.Ar source_file
or the last component of
.Ar source_file .
This file is a
symbolic link that references
.Ar source_file .
If
.Ar target
does not exist, a file with name
.Ar target
is created and it is a symbolic link that references
.Ar source_file .
.Lp
If the
.Fl s
option is used with more than two arguments,
.Ar target
must be an existing directory or an error will be returned. For each
.Ar source_file ,
a link is created in
.Ar target
whose name is the last component of
.Ar source_file .
Each new
.Ar source_file
is a symbolic link to the original
.Ar source_file .
The files and
.Ar target
may reside on different file systems.
.
The
.Fl P
and
.Fl F
options are ignored if this option is present.
.
.It Fl F
.
If
.Ar source_file
names a symbolic link, then the
.Ar target
will be linked to the file that symbolic link
.Ar source_file ,
references, rather than
.Ar source_file
itself.
This is the default behavior, and is the inverse of
.Fl F .
If both
.Fl F
and
.Fl P
are present, then the last one supplied will determine the behavior.
This option is ignored if
.Fl s
is present.
.
.It Fl P
.
If
.Ar source_file
names a symbolic link, then the
.Ar target
will be linked to the symbolic link
.Ar source_file ,
rather than the file that
.Ar source_file
references.
This is the inverse of
.Fl F .
If both
.Fl F
and
.Fl P
are present, then the last one supplied will determine the behavior.
This option is ignored if
.Fl s
is present.
.
.It Fl n
.
If
.Ar target
is an existing file, writes a diagnostic message to stderr and
goes on to any remaining
.Ar source_file Ns No s.
The
.Fl f
option overrides this
option.
This is the default behavior and is silently ignored.
.El
.
.Sh OPERANDS
.
The following operands are supported:
.Bl -tag -width indent
.It Ar source_file
A path name of a file to be linked.
This can be either a regular or special file.
If the
.Fl s
option is specified,
.Ar source_file
can also be a directory.
.
.It Ar target
The path name of the new directory entry to be created, or of an existing
directory in which the new directory entries are to be created.
.El
.
.Sh ENVIRONMENT VARIABLES
.
See
.Xr environ 5
for descriptions of the following environment variables
that affect the execution of
.Nm :
.Dv LANG , LC_ALL , LC_CTYPE , LC_MESSAGES , No and Dv NLSPATH .
.
.Sh EXIT STATUS
.
.Ex -std
.
.Sh CODE SET INDEPENDENCE
.
.Sy Enabled .
.
.Sh INTERFACE STABILITY
.
.Sy Standard .
However the
.Fl n
is a local extension, and is
.Sy Committed .
.
.Sh SEE ALSO
.
.Xr chmod 1 ,
.Xr ls 1 ,
.Xr stat 2 ,
.Xr environ 5 ,
.Xr standards 5
.
.Sh NOTES
A symbolic link to a directory behaves differently than you might expect in
certain cases.
While an
.Xr ls 1
command on such a link displays the files
in the pointed-to directory, entering
.Ic ls Fl l
displays information about the link itself:
.Bd -literal -offset indent
example% \fBln -s dir link\fR
example% \fBls link\fR
file1 file2 file3 file4
example% \fBls -l link\fR
lrwxrwxrwx  1 user            7 Jan 11 23:27 link -> dir
.Ed
.Lp
When you change to a directory
Pq see Xr cd 1
through a symbolic link, using
.Pa /usr/bin/sh
or
.Pa /usr/bin/csh ,
you wind up in the pointed-to location
within the file system. This means that the parent of the new working directory
is not the parent of the symbolic link, but rather, the parent of the
pointed-to directory. This will also happen when using
.Ic cd
with the
.Fl P
option from
.Pa /usr/bin/ksh
or
.Pa /usr/xpg4/bin/sh .
For
instance, in the following case, the final working directory is
.Pa /usr
and not
.Pa /home/user/linktest .
.Bd -literal -offset indent
example% \fBpwd\fR
/home/user/linktest
example% \fBln -s /usr/tmp symlink\fR
example% \fBcd symlink\fR
example% \fBcd .\|.\fR
example% \fBpwd\fR
.Ed
.Lp
C shell users can avoid any resulting navigation problems by using the
.Ic pushd
and
.Ic popd
built-in commands instead of
.Ic cd .
